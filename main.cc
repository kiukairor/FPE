#include <stdlib.h>
#include <stdio.h>
#include <execinfo.h>
#include <unistd.h>
#include <signal.h>
#include<iostream>
#include <string.h>
#include <cmath>
#include "aes.h"
#include "utils.h"
//#include "feistel.h"
#include "ff3.h"

#include <openssl/aes.h>
#include <openssl/bn.h>



void handler(int sig) {
  void *array[10];
  size_t size;

  // get void*'s for all entries on the stack
  size = backtrace(array, 10);

  // print out all the frames to stderr
  fprintf(stderr, "Error: signal %d:\n", sig);
  backtrace_symbols_fd(array, size, STDERR_FILENO);
  exit(1);
}

int main(){
    signal(SIGSEGV, handler); 
    unsigned char plain[] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1 }; 
    //unsigned char plain[] = {0x2e, 0x58, 0x66, 0x92, 0xe6, 0x47, 0xf5, 0x02, 0x8e, 0xc6, 0xfa, 0x47, 0xa5, 0x5a, 0x2a, 0xab};
    //unsigned char plain[] = {0x6b, 0xc1, 0xbe, 0xe2, 0x2e, 0x40, 0x9f, 0x96, 0xe9, 0x3d, 0x7e, 0x11, 0x73, 0x93, 0x17, 0x2a,
    //                         0xAE, 0x2D, 0x8A, 0x57, 0x1E, 0x03, 0xAC, 0x9C, 0x9E, 0xB7, 0x6F, 0xAC, 0x45, 0xAF, 0x8E, 0x51,
    //                         0x30, 0xC8, 0x1C, 0x46, 0xA3, 0x5C, 0xE4, 0x11, 0xE5, 0xFB, 0xC1, 0x19, 0x1A, 0x0A, 0x52, 0xEF,
    //                         0xF6, 0x9F, 0x24, 0x45, 0xDF, 0x4F, 0x9B, 0x17, 0xAD, 0x2B, 0x41, 0x7B, 0xE6, 0x6C, 0x37, 0x10};
    //iv VERY BAD example
    //unsigned char iv[] = { 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff }; 
    //unsigned char iv[] = {0x25, 0x69, 0x53, 0xb2, 0xfe, 0xab, 0x2a, 0x04, 0xae, 0x01, 0x80, 0xd8, 0x33, 0x5b, 0xbe, 0xd6};
    unsigned char iv[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F};
    
    
    //unsigned char key[] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f }; //key example
    //unsigned char key[] = {0x9d, 0xc2, 0xc8, 0x4a, 0x37, 0x85, 0x0c, 0x11, 0x69, 0x98, 0x18, 0x60, 0x5f, 0x47, 0x95, 0x8c};
    unsigned char key[] = {0x2B, 0x7E, 0x15, 0x16, 0x28, 0xAE, 0xD2, 0xA6, 0xAB, 0xF7, 0x15, 0x88, 0x09, 0xCF, 0x4F, 0x3C};


    unsigned int plain_len = sizeof(plain)/sizeof(plain[0]);  //bytes in plaintext
    unsigned int outLen = 0;  // out param - bytes in —Åiphertext

    AES aes(128);  //128 - key length, can be 128, 192 or 256
    unsigned char *c = aes.EncryptCBC(plain, plain_len, key, iv, outLen);
    for (int i=0; i<outLen;i++)
        cout << hex << (int) c[i] <<", ";
    cout << endl;

	string dec_str="109876";    
    byte *arr=new byte[dec_str.length()];
    
    int arr_len=dec_str.length();
    
    convertDecStr2Arr(dec_str, arr, arr_len);
    print_array(arr,arr_len);
//
    byte *out=new byte[16];
    int key_len=sizeof(key);
    //int res = prf(plain,plain_len, out, outLen, key, key_len,iv);
    int res = prf(plain, plain_len, out, outLen, key, key_len, iv);
    byte tweak[7]={1,2,3,129,10,40,60};
    FF3 ff3 = FF3(key, key_len, 10, tweak);
    //FF3::ff3_helper helper = ff3.init(plain, plain_len);
    int r = ff3.exec(plain, plain_len);
   
return 0;
}













